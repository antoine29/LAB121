package pokedex;

import javax.swing.JOptionPane;
import javax.swing.ImageIcon;

import java.io.IOException;
/**
 *
 * @author antoine
 */
public class framePokemon extends javax.swing.JFrame {
    
    // El frame pokemon almacenara los objs pokemon en este vector
    // Sacaremos a los pokemones de un archivo
    
    Pokemon vec[]; 
    
    int indice;         // Este sera el indice del pokemon que estamos viendo en pantalla
    int nroPokemones;   // Nro de pokemones para ir recorriendo
    
    //Agregamos las imagenes como iconos el jLabels
    ImageIcon iconLogo;
    
    // Recorremos el pokedex actualizando los labels con el objeto vec[indice]
    public void updateLabels(){
        // Recorremos el pokedex, actualizando los jLabels con el indice del pokemon que estamos viendo
        jLabel2.setText(vec[indice].getNombre());
        jLabel4.setText(vec[indice].getTipo());
        jLabel5.setText(vec[indice].getImagen());
        
        // Cada pokemon tiene un attrib. imagen que solo es el nombre de la imagen almacenada
        // en la carpeta Pokedex/images
        // tip: imagenes del mismo tamaÃ±o y misma extension
        iconLogo = new ImageIcon("images/"+vec[indice].getImagen());
        jLabel5.setIcon(iconLogo);

    }
    
    // Metodo para sacar pokemones del archivo y setearlos al vector 
    public void seteaPokemones() throws ClassNotFoundException, IOException {
        /*
        FileToVec x = new FileToVec();
        vec = x.getVec();
        */
        
        ArchivoPokemon ar = new ArchivoPokemon("archivoPokemon.dat");
        ar.crear();
        vec = ar.archivoToVector();
        
        // System.out.println("el tamanio del vec es " + vec.length);
        
        if(vec.length > 0){
            // tenemos pokemones en el vector
            indice = 0;
            nroPokemones = vec.length; 
        }
        else{
            // no tenemos pokemones en el vector
            indice =  -1;
        }
        
    }
    /**
     * Creates new form framePokemon
     */
    public framePokemon() throws ClassNotFoundException, IOException {
        
        seteaPokemones();
        
        initComponents();
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("jLabel2");

        jLabel3.setText("Tipo");

        jLabel4.setText("jLabel4");

        jButton1.setText("anterior");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("siguiente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("jLabel5");

        if(indice >= 0){
            jLabel2.setText(vec[indice].getNombre());
            jLabel4.setText(vec[indice].getTipo());
            jLabel5.setText(vec[indice].getImagen());

            iconLogo = new ImageIcon("images/"+vec[indice].getImagen());
            jLabel5.setIcon(iconLogo);
        }
        else{
            jLabel2.setText("VACIO");
            jLabel4.setText("VACIO");
            jLabel5.setText("VACIO");
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                                .addComponent(jLabel5))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        //Boton siguiente
        if(indice+1 < nroPokemones ){
            indice++;
            updateLabels();
        }  
        //JOptionPane.showMessageDialog(rootPane, "estoy en el pk " + indice);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //anterior
        if(indice-1 > -1 ){
            indice--; 
            updateLabels();
        } 
        //JOptionPane.showMessageDialog(rootPane, "estoy en el pk " + indice);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(framePokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(framePokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(framePokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(framePokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                try{
                    new framePokemon().setVisible(true);
                }
                catch(Exception e){System.out.println(".run()" + e.getMessage());}
                  
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
